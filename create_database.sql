-- Generated by Oracle SQL Developer Data Modeler 4.0.3.853
--   at:        2016-03-23 16:14:40 CET
--   site:      Oracle Database 10g
--   type:      Oracle Database 10g




CREATE TABLE friend
  (
    player_id_player_data INTEGER NOT NULL ,
    friend_id_player_data INTEGER NOT NULL
  ) ;
CREATE INDEX friend__IDX_player ON friend
  ( player_id_player_data ASC
  ) ;
CREATE INDEX friend__IDX_friend ON friend
  ( friend_id_player_data ASC
  ) ;
CREATE INDEX friend__IDX_player_friend ON friend
  (
    player_id_player_data ASC ,
    friend_id_player_data ASC
  ) ;
ALTER TABLE friend ADD CONSTRAINT friend_PK PRIMARY KEY ( player_id_player_data, friend_id_player_data ) ;
ALTER TABLE friend ADD CONSTRAINT friend__UN UNIQUE ( player_id_player_data , friend_id_player_data ) ;

CREATE TABLE game
  (
    id_game    INTEGER NOT NULL ,
    begin_date TIMESTAMP NOT NULL ,
    end_date   TIMESTAMP NOT NULL ,
    game_log CLOB
  ) ;
CREATE UNIQUE INDEX game__IDX ON game
  (
    id_game ASC
  )
  ;
  ALTER TABLE game ADD CONSTRAINT game_PK PRIMARY KEY ( id_game ) ;
  ALTER TABLE game ADD CONSTRAINT game__UN UNIQUE ( id_game ) ;

CREATE TABLE player
  (
    id_player                  INTEGER NOT NULL ,
    player_data_id_player_data INTEGER NOT NULL
  ) ;
CREATE UNIQUE INDEX player__IDX ON player
  (
    player_data_id_player_data ASC
  )
  ;
  ALTER TABLE player ADD CONSTRAINT player_PK PRIMARY KEY ( id_player ) ;
  ALTER TABLE player ADD CONSTRAINT player__UN_id UNIQUE ( id_player ) ;
  ALTER TABLE player ADD CONSTRAINT player__UN_id_player_data UNIQUE ( player_data_id_player_data ) ;

CREATE TABLE player_data
  (
    id_player_data INTEGER NOT NULL ,
    nick           VARCHAR2 (50 CHAR) ,
    login          VARCHAR2 (25 CHAR) NOT NULL ,
    passwd_hash BLOB NOT NULL ,
    "e-mail"      VARCHAR2 (100) NOT NULL ,
    register_date TIMESTAMP NOT NULL ,
    last_act_date TIMESTAMP
  ) ;
CREATE UNIQUE INDEX player_data__IDX_id ON player_data
  (
    id_player_data ASC
  )
  ;
CREATE UNIQUE INDEX player_data__IDX_login ON player_data
  (
    login ASC
  )
  ;
  CREATE INDEX player_data__IDX_last_act ON player_data
    ( last_act_date ASC
    ) ;
  ALTER TABLE player_data ADD CONSTRAINT player_data_PK PRIMARY KEY ( id_player_data ) ;
  ALTER TABLE player_data ADD CONSTRAINT player_data__UN_id UNIQUE ( id_player_data ) ;
  ALTER TABLE player_data ADD CONSTRAINT player_data__UN_login UNIQUE ( login ) ;

CREATE TABLE score
  (
    walkover         CHAR (1) NOT NULL ,
    place            INTEGER NOT NULL ,
    score            INTEGER NOT NULL ,
    game_id_game     INTEGER NOT NULL ,
    player_id_player INTEGER NOT NULL
  ) ;
CREATE INDEX score__IDX_game ON score
  ( game_id_game ASC
  ) ;
CREATE INDEX score__IDX_player ON score
  ( player_id_player ASC
  ) ;
CREATE INDEX score__IDX_game_player ON score
  (
    game_id_game ASC ,
    player_id_player ASC
  ) ;
ALTER TABLE score ADD CONSTRAINT score_PK PRIMARY KEY ( game_id_game, player_id_player ) ;
ALTER TABLE score ADD CONSTRAINT score__UN UNIQUE ( game_id_game , player_id_player ) ;

ALTER TABLE friend ADD CONSTRAINT FK_ASS_2 FOREIGN KEY ( player_id_player_data ) REFERENCES player_data ( id_player_data ) ;

ALTER TABLE friend ADD CONSTRAINT FK_ASS_3 FOREIGN KEY ( friend_id_player_data ) REFERENCES player_data ( id_player_data ) ;

ALTER TABLE player ADD CONSTRAINT player_player_data_FK FOREIGN KEY ( player_data_id_player_data ) REFERENCES player_data ( id_player_data ) ;

ALTER TABLE score ADD CONSTRAINT score_game_FK FOREIGN KEY ( game_id_game ) REFERENCES game ( id_game ) ;

ALTER TABLE score ADD CONSTRAINT score_player_FK FOREIGN KEY ( player_id_player ) REFERENCES player ( id_player ) ;

CREATE OR REPLACE VIEW view_game  AS
SELECT game.*,
  COUNT(*)                      AS player_count,
  SUM(score.score)              AS score_sum,
  winner_score.player_id_player AS id_winner
FROM game
INNER JOIN score
ON game.id_game = score.game_id_game
INNER JOIN score winner_score
ON game.id_game          = winner_score.game_id_game
WHERE winner_score.place = 1
GROUP BY winner_score.player_id_player ;





CREATE OR REPLACE VIEW view_player  AS
SELECT player.*,
  COUNT(*)                      AS walkover_count,
  COUNT(*)                      AS games_count,
  AVG(non_walkover_score.score) AS avg_score
FROM player
INNER JOIN score walkover_score
ON player.id_player = walkover_score.player_id_player
INNER JOIN score games_score
ON player.id_player = games_score.player_id_player
INNER JOIN score non_walkover_score
ON player.id_player             = non_walkover_score.player_id_player
WHERE walkover_score.walkover   = 'true'
AND non_walkover_score.walkover = 'false' ;





CREATE OR REPLACE VIEW view_logged_player  AS
SELECT player_data.*,
  view_player.games_count,
  view_player.avg_score,
  view_player.walkover_count,
  view_player.id_player
FROM view_player
INNER JOIN player_data
ON view_player.id_player_data = player_data.id_player_data ;





CREATE SEQUENCE sequence_game_id START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER trigger_new_game_id BEFORE
  INSERT ON game FOR EACH ROW WHEN (NEW.id_game IS NULL) BEGIN
  SELECT sequence_game_id.NEXTVAL INTO :NEW.id_game FROM DUAL;
END;
/

CREATE SEQUENCE sequence_player_id START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER trigger_new_player_id BEFORE
  INSERT ON player FOR EACH ROW BEGIN
  SELECT sequence_player_id.NEXTVAL INTO :NEW.id_player FROM DUAL;
END;
/

CREATE SEQUENCE sequence_player_data START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER trigger_new_player_data_id BEFORE
  INSERT ON player_data FOR EACH ROW BEGIN
  SELECT sequence_player_data.NEXTVAL INTO :NEW.id_player_data FROM DUAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                            11
-- ALTER TABLE                             17
-- CREATE VIEW                              3
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
